#!/bin/bash


################################################################################
# Prerequisites

cat << EOF
To enable GPUs within docker, install the requirements for that first and then continue with this script.
Example instructions:  https://gist.github.com/nathzi1505/d2aab27ff93a3a9d82dada1336c45041
EOF

read -n 1 -r -p "Continue? " yn
echo    # (optional) move to a new line
if [[ ! $yn =~ ^[Yy]$ ]]
then
    exit
fi

################################################################################
# Parameters

script_dir="$( cd "$( dirname "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"
skel_home=$script_dir/skel_home


################################################################################
# misc programs

sudo apt-get --yes install \
    vim \
    tree \
    tmux


################################################################################
# Copy files

for x in `ls -A $skel_home`
do
    cp -r $skel_home/$x ~/
done


################################################################################
# docker
# ref: https://docs.docker.com/engine/install/ubuntu/
# Could also use docker install convenience script as per: https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html

if [ "$(which docker)" == "" ]; then
    sudo apt-get --yes install \
        apt-transport-https \
        ca-certificates \
        curl \
        gnupg-agent \
        software-properties-common
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -
    sudo add-apt-repository \
       "deb [arch=amd64] https://download.docker.com/linux/ubuntu \
       $(lsb_release -cs) \
       stable"
    sudo apt-get update
    sudo apt-get --yes install \
        docker-ce \
        docker-ce-cli \
        containerd.io 
    # permissioning 
    # ref: https://www.digitalocean.com/community/questions/how-to-fix-docker-got-permission-denied-while-trying-to-connect-to-the-docker-daemon-socket
    sudo groupadd docker
    sudo usermod -aG docker ${USER}
fi

################################################################################
# Dockash and apps

dockash_dest=~/bin/dockash
curl --location --output "${dockash_dest}" https://raw.githubusercontent.com/dan-elias/dockash/master/dockash
chmod +x "${dockash_dest}"
for app in $(dockash all-apps); do dockash install --verbose $app; done

################################################################################
# Other containerized apps

# zoom
# ref: https://github.com/mdouchement/docker-zoom-us
docker run -it --rm \
  --volume $HOME/bin:/target \
  mdouchement/zoom-us:latest install

################################################################################
# Post-install message
cat << EOF
Other steps:
    * If necessary, install Mediatek wifi driver using *install_mediatek_driver* script
    * Install the latest version of docker-compose (example instructions here: https://www.digitalocean.com/community/tutorials/how-to-install-and-use-docker-compose-on-ubuntu-20-04)
    * Log out & back in before trying docker (eg: "docker ps"), or using any dockash scripts
    * Configure git:
        git config --global credential.helper store
        git config --global core.editor vim

EOF
