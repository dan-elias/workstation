#!/bin/bash

set -e


################################################################################
# Update pci IDs
# ref: https://www.cyberciti.biz/faq/linux-tell-which-graphics-vga-card-installed/

sudo update-pciids


################################################################################
# Change display to intel
# ref: https://askubuntu.com/questions/1229974/fresh-20-04-install-with-nvidia-and-igpu-only-get-igpu-resolutions/1243949#1243949

declare -A bdf
for brand in intel nvidia
do
    bdf[$brand]=$(lspci -v | egrep -i --color 'vga|3d|2d' | grep -i $brand | cut -f 1 -d " ")
    if [ "${bdf[$brand]}" == "" ]; then
        echo No $brand GPU found - aborting
        exit 1
    fi
done
echo sudo prime-select on-demand
grub_default=/etc/default/grub
if [ "$(grep nogpumanager $grub_default)" == "" ]; then
    echo sudo sed -i 's/GRUB_CMDLINE_LINUX_DEFAULT="/GRUB_CMDLINE_LINUX_DEFAULT="nogpumanager /' $grub_default
fi

sudo cat <<EOF > /etc/X11/xorg.conf
Section "Device"
    Identifier     "intel"
    Driver         "modesetting"
    BusID          "PCI:${bdf[intel]}"
EndSection
EOF


################################################################################
# Set up Nvidia container toolkit
# ref: https://docs.nvidia.com/datacenter/cloud-native/container-toolkit/install-guide.html

distribution=$(. /etc/os-release;echo $ID$VERSION_ID) \
   && curl -s -L https://nvidia.github.io/nvidia-docker/gpgkey | sudo apt-key add - \
   && curl -s -L https://nvidia.github.io/nvidia-docker/$distribution/nvidia-docker.list | sudo tee /etc/apt/sources.list.d/nvidia-docker.list

sudo apt-get update
sudo apt-get install -y nvidia-docker2
sudo systemctl restart docker

cat <<EOF
GPU configured for calculation via Docker

Reboot for changes to take effect

Example test: docker run --rm --gpus all nvidia/cuda:11.0-base nvidia-smi  # should show nvidia GPU status
EOF
